#!/usr/bin/python

import io

import env
from constants import Systems, BashInputFiles, BashOutputFiles

def writeHeader(fileName, fileBuffer):
  fileBuffer.write(unicode("#!/bin/bash\n# ~/" + fileName + ": executed by bash(1) for non-login shells.\n# This file was generated by a script. Do not edit manually!\n"))

def writeInputFileContents(fileName, fileBuffer):
  with open(env.inputFilesDir + fileName) as inputFile:
    print "\tSourcing input file " + fileName
    for line in inputFile:
      fileBuffer.write(unicode(line))

def writeOutputFile(filePath, fileBuffer):
  print "\tWriting output file " + filePath
  with open(filePath, 'w') as outputFile:
    outputFile.write(fileBuffer.getvalue())

def compileBashProfile():
  print "Compiling file: " + BashOutputFiles.BASH_PROFILE.value
  with io.StringIO() as fileBuffer:
    writeHeader(BashOutputFiles.DOT_BASH_PROFILE.value, fileBuffer)
    writeInputFileContents(BashInputFiles.BASH_COMMON.value, fileBuffer)
    writeInputFileContents(BashInputFiles.BASH_MAC.value, fileBuffer)
    writeOutputFile(env.outputFilesDir + BashOutputFiles.BASH_PROFILE.value, fileBuffer)
    if env.platform == Systems.DARWIN.value:
      writeInputFileContents(BashInputFiles.BASH_PRIVATE.value, fileBuffer)
      writeOutputFile(env.homeDir + BashOutputFiles.DOT_BASH_PROFILE.value, fileBuffer)
    print "File completed."

def compileBashrc():
  print "Compiling file: " + BashOutputFiles.BASHRC.value
  with io.StringIO() as fileBuffer:
    writeHeader(BashOutputFiles.DOT_BASHRC.value, fileBuffer)
    writeInputFileContents(BashInputFiles.BASH_COMMON.value, fileBuffer)
    writeInputFileContents(BashInputFiles.BASH_LINUX.value, fileBuffer)
    writeOutputFile(env.outputFilesDir + BashOutputFiles.BASHRC.value, fileBuffer)
    if env.platform == Systems.LINUX.value:
      writeInputFileContents(BashInputFiles.BASH_PRIVATE.value, fileBuffer)
      writeOutputFile(env.homeDir + BashOutputFiles.DOT_BASHRC.value, fileBuffer)
    print "File completed."

def compileBashFiles():
  compileBashProfile()
  compileBashrc()
