import io
from os.path import join, abspath

import env
import ioutils
from constants import SYSTEMS, SRCFILES, DOTFILES


def _write_header(file_name, file_buffer):
    header = ("#!/bin/bash\n# ~/{0}"
    ": executed by bash(1) for non-login shells.\n"
    "# This file was generated by a script. Do not edit manually!\n\n"
    .format(file_name))
    ioutils.write_to_output_buffer(header, file_buffer)


def compile_bash_file(platform):
    if platform == SYSTEMS.DARWIN.value:
        bash_file = DOTFILES.BASH_PROFILE.value
        if env.is_gnu:
            bash_platform_file = SRCFILES.BASH_MAC_GNU.value
        else:
            bash_platform_file = SRCFILES.BASH_MAC_BSD.value
    elif platform == SYSTEMS.LINUX.value:
        bash_file = DOTFILES.BASHRC.value
        bash_platform_file = SRCFILES.BASH_LINUX.value

    ioutils.output("Compiling file: " + bash_file)
    with io.StringIO() as file_buffer:
        _write_header(bash_file, file_buffer)
        ioutils.write_required_input_file_contents(
            SRCFILES.BASH_GLOBAL.value, file_buffer)
        ioutils.write_optional_input_file_contents(bash_platform_file, file_buffer)
        if not env.ARGS.no_local:
            ioutils.write_optional_input_file_contents(
                SRCFILES.BASH_LOCAL.value, file_buffer)
        ioutils.write_output_file(join(env.OUTPUT_DIR, bash_file), file_buffer)
        ioutils.output("File completed.\n")


def compile_bash_profile():
    compile_bash_file(SYSTEMS.DARWIN.value)


def compile_bashrc():
    compile_bash_file(SYSTEMS.LINUX.value)


def compile_bash_files():
    compile_bash_profile()
    compile_bashrc()
